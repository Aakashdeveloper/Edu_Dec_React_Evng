https://nodejs.org/en/
https://code.visualstudio.com/
https://github.com/
https://github.com/Aakashdeveloper



Es=> EcmaScript
Es5
Es6

/************************
      DataTypes 
*************************/
String    =>  "aa" "10" "true" '11'
Number    => 10 30809898 , 10.48 ,3
Boolean   => true/false
null 
undefined

// Es5 
var    => Redeclare and reassign

// Es6
let   => We cannot Redeclare but we can reassign
const  => We cannot Redeclare nor reassign


var a  = 10


var a = declare
a = 10 => assignment


//Es5
function add(a,b){
    return a+b
}

//Es6
let add = (a,b) => { return a+b }

[1,1,4,4,5]
["f","f","egrg","g"]
[true,false]

[767,"jhj",true,"jgjh",867,7]

var a = [767,"jhj",true,"jgjh",867,7]
undefined
a[0]
767
a[1]
"jhj"
for(i=0;i<a.length;i++){console.log(a[i])}

a.map((data) => {console.log(data)})
map
filter

var num = [0,1,2,3]
a.map((data) => {return data*1})
a.filter((data) => {return data*1})

var num = [0,1,2,3]
a.map((data) => {return data*1})
(6) [767, NaN, 1, NaN, 867, 7]
var num = [0,1,2,3]
num.map((data) => {return data*1})
(4) [0, 1, 2, 3]
num.filter((data) => {return data*1})
(3) [1, 2, 3]

var a  =[1, 2, 3]
...a


////////////////////////////////////////
npm => node package manager

local => 
Global => build create test

JSON => JavaScript Object notation

{
    "name":"john",
    "class":"jg"
}

/////////////////////////////
    Package.JSON
////////////////////////////
> You must install nodejs
> Navigate to folder where you want to create using cmd/terminal
> npm init
> answer all question
> type "yes"

///////////////////
Step to install local  package
////////////////////
> Navigate to folder where you want to create using cmd/terminal
> npm install react

///////////////////
Step to install global  package
////////////////////
Win
> Run cmd as admin
> npm i -g create-react-app

Mac/Linux
> open terminal
> sudo npm i -g create-react-app

///////////////////
Step to create application
////////////////////
Win
> Run cmd as admin
> npm i -g create-react-app
> Navigate to folder where you want to create using cmd
> create-react-app myapp
> cd myapp
> npm start

Mac/Linux
> open terminal
> sudo npm i -g create-react-app
> Navigate to folder where you want to create using terminal
> create-react-app myapp


npm i -g @aakashdeveloper/create-node-app


///////////////////////////
    Component
///////////////////////////
Functional Component       ClassBase Component

are light in weight         Heavy in weight as compare to functional
Dumb component              Logical component
Where we just have          Where we are going to deal with data and more logic invlove
to display content with 
less logic

Cannot handle State          Can Handle State

const app = () => { }        class app extends Component


State & Props

                Props
Component A     ====>   Component B
State="body"            State=


<a href="">  abc   </abc>
<img src="f" />


git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/testapp1.git
git push -u origin master


git add .
git commit -m "first commit"
git push

https://github.com/Aakashdeveloper/Edu_Dec_Reeact_Evng



json-server --watch db.json --port 8900

function robot(name){
    this.name = name;
    this.legs = 2;
    this.color="white"
}

function human(name){
    this.name = name;
    this.hands = 2
}


human.prototype = new robot()


Post ==> adding the data
Put => updating complete or major part of data
Patch => small part of data

CRUD

var a = 10
undefined
a>10?"hii":"bie"
"bie"var a = 10
undefined
a>10?"hii":"bie"
"bie"


////////////////
function printme(a){
    for(i=0;i<a;i++){
        console.log(i)
    }
}

function* printme(a){
    for(i=0;i<a;i++){
        yield i
    }
}

function myfun(obj){
    return obj
}

var a = 'john'
var john={
    name:'john'
}

myfun(a)
myfun.call(john)


SOAP
------------
REST
-----------
GraphQL -> NodeJs

React -apollo

 npm i apollo-boost graphql react-apollo 
 npm run build


 docker build . -t ahanda205/edureact
 docker image ls

 docker run -p 8006:3000 ahanda205/edureact



 Testing
 Nginx => proxy server
 LifeCycle Hooks

 https://aakashhanda.me/

 nginx.conf

server {
        listen       8081;
        server_name  localhost;
        location / {
	     root   /var/www/react-app;
         index  index.html index.htm;
        }
    }

///////
npm i enzyme --save-dev


////////////
Step to setup Native app
////////
Win
> Run cmd as admin
> npm i -g create-react-native-app
> Navigate to folder where you want to create using cmd
> create-react-native-app myapp
> cd myapp
> npm start

Mac/Linux
> open terminal
> sudo npm i -g create-react-native-app
> Navigate to folder where you want to create using terminal
> create-react-native-app myapp

